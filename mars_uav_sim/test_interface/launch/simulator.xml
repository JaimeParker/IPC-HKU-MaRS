<launch>
    <arg name="init_x_" value="0.0"/>
    <arg name="init_y_" value="0.0"/>
    <arg name="init_z_" value="1.0"/>
    <arg name="map_size_x_"/>
    <arg name="map_size_y_"/>
    <arg name="map_size_z_"/>
    <arg name="c_num"/>
    <arg name="p_num"/>
    <arg name="odometry_topic"/>
    <arg name="obj_num" value="1"/>

    <!-- map generation 1-->
    <param name="add_boundary" value="1"/>
    <param name="is_bridge" value="0"/>
    <param name="downsample_res" value="0.1"/>


    <arg name="global_cloud_topic" default="/map_generator/global_cloud"></arg>
    <arg name="frame_id" default="world"></arg>


    <node pkg="random_map_generator" type="random_map_node" name="random_map_node" output="screen">
        <rosparam command="load" file="$(find test_interface)/config/map_wall.yaml"/>
        <!--        <remap from="/map_generator/global_cloud" to="/global_cloud"/>-->
        <remap from="/map_generator/global_cloud" to="$(arg global_cloud_topic)"/>
        <param name="map/frame_id" value="$(arg frame_id)" type="string"></param>
    </node>

    <node pkg="random_map_generator" type="color_map_for_pointcloud" name="color_map_for_pointcloud" output="screen">
        <remap from="~cloud" to="$(arg global_cloud_topic)"></remap>
        <param name="color/frame_id" value="$(arg frame_id)" type="string"></param>
        <param name="color/min_height" value="-2" type="double"></param>
        <param name="color/max_height" value="3.5" type="double"></param>
        <param name="color/map_type_name" value="Magma" type="string"></param>
        <param name="color/publish_rate" value="1.0" type="double"></param>
        <param name="color/inverse_color" value="false" type="bool"></param>
    </node>

    <node pkg="nodelet" type="nodelet" name="manager" args="manager" output="screen">
        <param name="num_worker_threads" value="16"/>
    </node>

    <node pkg="perfect_drone_sim" type="perfect_tracker" name="perfect_drone" output="screen">
        <param name="init_position/x" value="$(arg init_x_)"/>
        <param name="init_position/y" value="$(arg init_y_)"/>
        <param name="init_position/z" value="$(arg init_z_)"/>
        <param name="mesh_resource" value="package://perfect_drone_sim/meshes/yunque-A.dae"/>
    </node>

    <!-- <node pkg="nodelet" type="nodelet" name="manager" args="manager" output="screen">
        <param name="num_worker_threads" value="16"/>
    </node> -->
<!--        <node pkg="nodelet" type="nodelet" name="so3_quadrotor" args="load so3_quadrotor/Nodelet manager" output="screen">-->
<!--            <rosparam file="$(find test_interface)/config/so3_quadrotor.yaml"/>-->
<!--            <param name="init_x" value="$(arg init_x_)" />-->
<!--            <param name="init_y" value="$(arg init_y_)" />-->
<!--            <param name="init_z" value="$(arg init_z_)" />-->
<!--            <remap from="~odom" to="/lidar_slam/odom"/>-->
<!--            <remap from="~so3cmd" to="so3_cmd"/>-->
<!--            <remap from="~imu" to="/lidar_slam/imu"/>-->
<!--            <remap from="~vis" to="vis"/>-->
<!--        </node>-->

<!--        <node pkg="nodelet" type="nodelet" name="so3_controller" args="load so3_controller/Nodelet manager" output="screen">-->
<!--            <rosparam file="$(find test_interface)/config/so3_controller.yaml"/>-->
<!--            <remap from="~odom" to="/lidar_slam/odom"/>-->
<!--            <remap from="~so3cmd" to="so3_cmd"/>-->
<!--            <remap from="~imu" to="/lidar_slam/imu"/>-->
<!--            <remap from="~position_cmd" to="/planning/pos_cmd"/>-->
<!--        </node>-->


<!--        <node pkg="odom_visualization" name="odom_visualization" type="odom_visualization" output="screen">-->
<!--            <remap from="~odom" to="/lidar_slam/odom"/>-->
<!--            <param name="mesh_resource" value="package://odom_visualization/meshes/yunque-A.dae"/>-->
<!--            <param name="tf45" value="true"/>-->
<!--            <param name="color/a" value="1.0"/>-->
<!--            <param name="color/r" value="1.0"/>-->
<!--            <param name="color/g" value="1.0"/>-->
<!--            <param name="color/b" value="1.0"/>-->
<!--            <param name="covariance_scale" value="100.0"/>-->
<!--            <param name="robot_scale" value="1.0"/>-->
<!--        </node>-->

    <node pkg="local_sensing_node" type="pcl_render_node" name="pcl_render_node">
        <rosparam command="load" file="$(find local_sensing_node)/params/camera.yaml"/>

        <remap from="~global_map" to="/map_generator/global_cloud"/>
        <remap from="~odometry" to="$(arg odometry_topic)"/>

<!--         Livox Avia-->
<!--                <param name="is_360lidar" value="0"/>-->
<!--                <param name="sensing_horizon" value="40.0"/>-->
<!--                <param name="sensing_rate" value="10.0"/>-->
<!--                <param name="estimation_rate" value="10.0"/>-->
<!--                <param name="polar_resolution" value="0.2"/>-->
<!--                <param name="yaw_fov" value="70.4"/>-->
<!--                <param name="vertical_fov" value="77.2"/>-->
<!--                <param name="min_raylength" value="1.0"/>-->
<!--                <param name="livox_linestep" value="1.4"/>-->
<!--                <param name="curvature_limit" value="100.0"/>-->
<!--                <param name="hash_cubesize" value="5.0"/>-->
<!--                <param name="use_avia_pattern" value="1"/>-->
<!--                <param name="use_minicf_pattern" value="0"/>-->
<!--                <param name="use_vlp32_pattern" value="0"/>-->
<!--                <param name="use_minicf_pattern" value="0"/>-->
        <!-- VLP-32 -->
        <param name="is_360lidar" value="1"/>
        <param name="sensing_horizon" value="30.0"/>
        <param name="sensing_rate" value="10.0"/>
        <param name="estimation_rate" value="10.0"/>
        <param name="polar_resolution" value="0.2"/>
        <param name="yaw_fov" value="360.0"/>
        <param name="vertical_fov" value="60.0"/>
        <param name="min_raylength" value="1.0"/>
        <param name="livox_linestep" value="1.4"/>
        <param name="curvature_limit" value="100.0"/>
        <param name="hash_cubesize" value="5.0"/>
        <param name="use_avia_pattern" value="0"/>
        <param name="use_vlp32_pattern" value="0"/>
        <param name="use_minicf_pattern" value="1"/>

        <param name="downsample_res" value="0.1"/>

        <param name="dynobj_enable" value="0"/>
        <param name="dynobject_size" value="0.8"/>
        <param name="dynobject_num" value="10"/>
        <param name="dyn_mode" value="0"/><!-- 0 for a=0, 1 for a=g, 2 for random walk -->
        <param name="dyn_velocity" value="1.0"/>

        <!-- collision parameter -->
        <param name="collisioncheck_enable" value="0"/>
        <param name="collision_range" value="0.3"/>

        <param name="output_pcd" value="0"/>

        <param name="map/x_size" value="$(arg map_size_x_)"/>
        <param name="map/y_size" value="$(arg map_size_y_)"/>
        <param name="map/z_size" value="$(arg map_size_z_)"/>

    </node>

</launch>
